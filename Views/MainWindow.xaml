<Window
    x:Class="TestWpfContextMenu.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
    xmlns:v="clr-namespace:TestWpfContextMenu.Views"
    xmlns:vm="clr-namespace:TestWpfContextMenu.ViewModels"
    Title="WPF コンテキストメニューの制御いろいろ"
    Width="640" ResizeMode="NoResize" SizeToContent="Height" >

    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>

    <behaviors:Interaction.Triggers>
        <!--  When ContentRendered event raised, Initialize method of ViewModel would be called.  -->
        <behaviors:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </behaviors:EventTrigger>

        <!--  Dispose method is called, when Window closing.  -->
        <behaviors:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </behaviors:EventTrigger>

        <!--  If you make user choose 'OK or Cancel' closing Window, then please use Window Close cancel Behavior.  -->

    </behaviors:Interaction.Triggers>

    <StackPanel>
        <StackPanel Margin="20,10,20,20" >

            <!--  シンプルなコンテキストメニュー  -->
            <Label Content="シンプルなコンテキストメニュー：右クリックでオープンする（左クリックではオープンしない）" >
                <Label.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="シンプルラベルメニュー 1" Command="{Binding MenuItemTestClickedCommand}" CommandParameter="シンプルラベルメニュー 1" />
                        <MenuItem Header="シンプルラベルメニュー 2" Command="{Binding MenuItemTestClickedCommand}" CommandParameter="シンプルラベルメニュー 2" />
                        <Separator />
                        <MenuItem Header="サブメニュー" >
                            <MenuItem Header="シンプルラベルサブメニュー 1" Command="{Binding MenuItemTestClickedCommand}" CommandParameter="シンプルラベルサブメニュー 1" />
                            <MenuItem Header="シンプルラベルサブメニュー 2" Command="{Binding MenuItemTestClickedCommand}" CommandParameter="シンプルラベルサブメニュー 2" />
                        </MenuItem>
                    </ContextMenu>
                </Label.ContextMenu>
            </Label>

            <!--  左クリックでもオープンするコンテキストメニュー  -->
            <Button Name="LabelLeftClick" Content="左クリックでもオープンするコンテキストメニュー（コントロールのイベントを捕捉してオープンする）" >
                <behaviors:Interaction.Triggers>
                    <behaviors:EventTrigger EventName="Click">
                        <behaviors:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=LabelLeftClick}" PropertyName="IsOpen" Value="True"/>
                        <behaviors:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=LabelLeftClick}" PropertyName="PlacementTarget" Value="{Binding ElementName=LabelLeftClick, Mode=OneWay}"/>
                    </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>
                <Button.ContextMenu>
                    <ContextMenu >
                        <MenuItem Header="左クリックメニュー 1" Command="{Binding MenuItemTestClickedCommand}" CommandParameter="左クリックメニュー 1" />
                        <MenuItem Header="左クリックメニュー 2" Command="{Binding MenuItemTestClickedCommand}" CommandParameter="左クリックメニュー 2" />
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>

            <!--  TextBox デフォルトのコンテキストメニューを非表示にする  -->
            <StackPanel Orientation="Horizontal" >
                <Label Content="TextBox デフォルトのコンテキストメニューを非表示にする" />
                <TextBox Width="100" Text="デフォルト（表示）" VerticalAlignment="Center" />
                <TextBox Width="100" Text="非表示" VerticalAlignment="Center" ContextMenu="{x:Null}" />
                <TextBox Width="100" Text="カスタム" VerticalAlignment="Center" >
                    <TextBox.ContextMenu>
                        <ContextMenu >
                            <MenuItem Header="TextBox メニュー 1" Command="{Binding MenuItemTestClickedCommand}" CommandParameter="TextBox メニュー 1" />
                            <MenuItem Header="TextBox メニュー 2" Command="{Binding MenuItemTestClickedCommand}" CommandParameter="TextBox メニュー 2" />
                        </ContextMenu>
                    </TextBox.ContextMenu>
                </TextBox>
            </StackPanel>

            <!--  ListBox のアイテムのみ右クリックでオープンするコンテキストメニュー  -->
            <ListBox ItemsSource="{Binding ListBoxItems}" Height="50" >
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem" >
                        <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext}"/>
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="ListBox メニュー 1" Command="{Binding MenuItemTestClickedCommand}" CommandParameter="ListBox メニュー 1" />
                                    <MenuItem Header="ListBox メニュー 2" Command="{Binding MenuItemTestClickedCommand}" CommandParameter="ListBox メニュー 2" />
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>

            <!--  動的に状態を制御するコンテキストメニュー  -->
            <Label Content="動的に状態を制御するコンテキストメニュー" >
                <behaviors:Interaction.Triggers>
                    <behaviors:EventTrigger EventName="ContextMenuOpening">
                        <l:LivetCallMethodAction MethodName="PrepareDynamicStateContextMenu" MethodTarget="{Binding}" />
                    </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>
                <Label.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{Binding MenuItemHeaderDynamicState}" HeaderStringFormat="{}{0} 1" Command="{Binding MenuItemTestClickedCommand}" CommandParameter="動的状態制御メニュー 1" />
                        <MenuItem Header="{Binding MenuItemHeaderDynamicState}" HeaderStringFormat="{}{0} 2" Command="{Binding MenuItemTestClickedCommand}" CommandParameter="動的状態制御メニュー 2" IsEnabled="{Binding IsDynamicStateMenuItemEnabled}" />
                        <MenuItem Header="{Binding MenuItemHeaderDynamicState}" HeaderStringFormat="{}{0} 3" Command="{Binding MenuItemTestClickedCommand}" CommandParameter="動的状態制御メニュー 3" Visibility="{Binding DynamicStateMenuItemVisibility}"/>
                    </ContextMenu>
                </Label.ContextMenu>
            </Label>

            <!--  動的にアイテム数を制御するコンテキストメニュー  -->
            <Label Content="動的にアイテム数を制御するコンテキストメニュー" >
                <behaviors:Interaction.Triggers>
                    <behaviors:EventTrigger EventName="ContextMenuOpening">
                        <l:LivetCallMethodAction MethodName="PrepareDynamicItemsContextMenu" MethodTarget="{Binding}" />
                    </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>
                <Label.ContextMenu>
                    <ContextMenu ItemsSource="{Binding DynamicMenuItems}" />
                </Label.ContextMenu>
            </Label>

        </StackPanel>
        <StatusBar >
            <StatusBarItem>
                <Label Content="{Binding StatusBarMessage}" Padding="0" VerticalContentAlignment="Center" />
            </StatusBarItem>
        </StatusBar>
    </StackPanel>
</Window>